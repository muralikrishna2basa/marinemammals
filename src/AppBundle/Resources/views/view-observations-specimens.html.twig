{% extends 'AppBundle::col-layout.html.twig' %}
 {% block title %}observation{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    {% stylesheets
    '@AppBundle/Resources/public/css/font-awesome.css'
    'http://cdn.jsdelivr.net/qtip2/2.2.1/jquery.qtip.min.css' %}
    <link rel="stylesheet" href="{{ asset_url }}"/>
    {% endstylesheets %}
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    {% javascripts
    'http://cdn.jsdelivr.net/qtip2/2.2.1/jquery.qtip.min.js' %}
    <script type="application/javascript" src="{{ asset_url }}"></script>
    <script type="application/javascript" src="https://maps.googleapis.com/maps/api/js"></script>
    {% endjavascripts %}
    <script type="application/javascript">
        $(document).ready(function () {
            $('[data-tooltip!=""]').qtip({
                content: {
                    attr: 'data-tooltip'
                }
            });
        });
        function initialize() {
            var canvas = document.getElementById('map-canvas');
            if (canvas) {
                var lat = Number(canvas.getAttribute('data-lat'));
                var lon = Number(canvas.getAttribute('data-lon'));
                var type = canvas.getAttribute('data-type');
                var mapOptions = {
                    center: {lat: lat, lng: lon},
                    zoom: 10,
                    streetViewControl: false
                };
                var map = new google.maps.Map(canvas, mapOptions);
                if (type === 'rect') {
                    var rectangle = new google.maps.Rectangle({
                        strokeColor: '#FF0000',
                        strokeOpacity: 0.8,
                        strokeWeight: 2,
                        fillColor: '#FF0000',
                        fillOpacity: 0.35,
                        map: map,
                        bounds: new google.maps.LatLngBounds(
                                new google.maps.LatLng(lat - 0.02, lon - 0.032),
                                new google.maps.LatLng(lat + 0.02, lon + 0.032))
                    });
                }
                else {
                    var markerOptions = {
                        position: {lat: lat, lng: lon}
                    };
                    var marker = new google.maps.Marker(markerOptions);
                    marker.setMap(map);
                }
            }
        }
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
{% endblock %}
{% block topbar %}
    <h2>{{ observation.eseSeqno.spec2events.scnSeqno.txnSeqno.vernacularNameEn|capitalize }} -
        <i>{{ observation.eseSeqno.spec2events.scnSeqno.txnSeqno.canonicalName }}</i></h2>
{% endblock %}
{% block sidebar %}
    <ul class="observation-map">
        <li>
            <span><strong>Location:</strong></span>
            <span>{{ observation.stnSeqno.description }}</span>
        </li>
        {% if observation.pfmSeqno %}
            <li>
                <span><strong>Platform:</strong></span>
                <span>{{ observation.pfmSeqno.name }}</span>
            </li>
        {% endif %}

        {% if observation.latDec and observation.lonDec %}
            <li>
                <span>{{ observation.latDec }}</span>
                <span>{{ observation.lonDec }}</span>
        <span data-tooltip="{% if observation.precisionFlag == null %}imprecise coordinate{% else %}precise coordinate{% endif %}"
              class="has-map-tooltip"></span></li>
            <li>
                <div id="map-canvas" data-lat="{{ observation.latDec }}" data-lon="{{ observation.lonDec }}"
                     data-type="point"></div>
            </li>
        {% elseif observation.stnSeqno.latDec and observation.stnSeqno.lonDec %}
            No precise coordinate was given for this observation, only a location with a general coordinate.
            {% if observation.stnSeqno.latDec and observation.stnSeqno.lonDec %}
                <li><strong>Coordinate of approximate location:</strong>
                    <span>{{ observation.stnSeqno.latDec }}</span>
                    <span>{{ observation.stnSeqno.lonDec }}</span></li>
                <li>
                    <div id="map-canvas" data-lat="{{ observation.stnSeqno.latDec }}"
                         data-lon="{{ observation.stnSeqno.lonDec }}" data-type="rect"></div>
                </li>


            {% endif %}
        {% else %}
            Neither the location given for this observation nor the observation itself has a coordinate.
        {% endif %}
    </ul>
{% endblock sidebar %}

