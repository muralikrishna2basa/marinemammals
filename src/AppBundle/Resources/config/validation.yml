AppBundle\Entity\AccountMaintenance:
    properties:
        psnSeqno:
               - NotBlank: ~
               - NotNull: ~
        email:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
        id:
                - Length:
                     min: 0
                     max: 100
AppBundle\Entity\CgRefCodes:
    properties:
        rvAbbreviation:
                - Length:
                     min: 0
                     max: 50
        rvDomain:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
        rvHighValue:
                - Length:
                     min: 0
                     max: 50
        rvLowValue:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
        rvMeaning:
                - Length:
                     min: 0
                     max: 100
AppBundle\Entity\ContainerLocalizations:
    properties:
        containerType:
                - Length:
                     min: 0
                     max: 50
        name:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 20
AppBundle\Entity\EventStates:
    getters:
        eitherNecropsyOrObservationLegal:
                - "True": { message: "An event cannot be connected to both a necropsy and an observation. Delete one of both." }
    properties:
        eventDatetime:
                - NotBlank: ~
                - NotNull: ~
                - AppBundle\Validator\Constraints\DateRange:
                     min: "1900-01-01"
                     max: "now"
        eventDatetimeFlagRef:
                - NotBlank: ~
                - NotNull: ~
#                - Length:
#                     min: 1
#                     max: 50
                - AppBundle\Validator\Constraints\LegalEventDatetimeFlag: ~
        description:
                - Length:
                     min: 0
                     max: 1300
        spec2events:
                - Valid: ~
AppBundle\Entity\Event2Persons:
    properties:
        eseSeqno:
               - NotBlank: ~
               - NotNull: ~
        e2pType:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
AppBundle\Entity\Groups:
    properties:
        accessLevel:
                - NotBlank: ~
                - NotNull: ~
                - Type:
                     type: integer
                     message: The value {{ value }} is not a valid {{ type }}.
                - Range:
                     min: 0
                     max: 99
        description:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 0
                     max: 100
        name:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 30
AppBundle\Entity\Institutes:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: code
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: name
    properties:
        code:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 15
        name:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 250
AppBundle\Entity\LesionTypes:
    properties:
        ognCode:
               - NotBlank: ~
               - NotNull: ~
        name:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
        processus:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
AppBundle\Entity\LesionValues:
    properties:
        olnNcyEseSeqno:
               - NotBlank: ~
               - NotNull: ~
        pmdSeqno:
               - NotBlank: ~
               - NotNull: ~
        value:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
        valueFlagRef:
                - NotBlank: ~
                - NotNull: ~
#                - Length:
#                     min: 1
#                     max: 50
AppBundle\Entity\Medias:
    properties:
        psnSeqno:
               - NotBlank: ~
               - NotNull: ~
        description:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 100
        mdaType:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
                - AppBundle\Validator\Constraints\LegalMediaType: ~
        location:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 200
AppBundle\Entity\Necropsies:
    properties:
        eseSeqno:
               - NotBlank: ~
               - NotNull: ~
        program:
                - Length:
                     min: 0
                     max: 50
        refAut:
                - Length:
                     min: 0
                     max: 30
        refLabo:
                - Length:
                     min: 0
                     max: 30
AppBundle\Entity\Observations:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity:
                fields: eseSeqno
                message: 'An observation is tied to exactly one event.'
    getters:
        stationOrCoordLegal:
                - "True": { message: "Either a station, a coordinate or both needs to be present" }
        coordLegal:
                - "True": { message: "A coordinate consists of both latitude and longitude. Only one of both is given." }
        precisionFlagLegal:
                - "True": { message: "This coordinate, as it is set, needs a precision flag as well." }
    properties:
        eseSeqno:
               - NotBlank: ~
               - NotNull: ~
               - Valid: ~
        cpnCode:
                - Length:
                     min: 0
                     max: 20
        isconfidential:
                - NotNull: ~
                - Type:
                     type: bool
                     message: The value {{ value }} is not a valid {{ type }}.
        latDec:
                - AppBundle\Validator\Constraints\DecimalLatitude: ~
                - Type:
                    type: numeric
                    message: The value {{ value }} is not a valid {{ type }}.
        lonDec:
                - AppBundle\Validator\Constraints\DecimalLongitude: ~
                - Type:
                    type: numeric
                    message: The value {{ value }} is not a valid {{ type }}.
        osnTypeRef:
                - NotBlank: ~
                - NotNull: ~
#                - Length:
#                     min: 1
#                     max: 50
                - AppBundle\Validator\Constraints\LegalOsnType: ~
        precisionFlag:
                - Length:
                     min: 0
                     max: 50
                - AppBundle\Validator\Constraints\LegalCoordinatePrecisionFlag: ~
        samplingeffortRef:
                - NotBlank: ~
                - NotNull: ~
#                - Length:
#                     min: 0
#                     max: 50
                - AppBundle\Validator\Constraints\LegalSamplingEffort: ~
        webcommentsNl:
                - Length:
                      min: 0
                      max: 500
        webcommentsFr:
                - Length:
                      min: 0
                      max: 500
        webcommentsEn:
                - Length:
                      min: 0
                      max: 500
#        values:
#                - Valid: ~
#                - All:
#                      - NotNull: ~
AppBundle\Entity\ObservationValues:
    properties:
        valueAssignable:
               - NotBlank: ~
               - NotNull: ~
        pmdSeqno:
               - NotBlank: ~
               - NotNull: ~
        value:
                - Length:
                     min: 1
                     max: 50
#        valueFlag:
#                - Length:
#                     min: 0
#                     max: 50
                     #TODO add That the values should correspond to the ones in cg_ref_codes
AppBundle\Entity\Organs:
    properties:
        code:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 10
        name:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
AppBundle\Entity\OrganLesions:
    properties:
        lteSeqno:
               - NotBlank: ~
               - NotNull: ~
        ncyEseSeqno:
               - NotBlank: ~
               - NotNull: ~
        description:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 1000
        scale:
                - Length:
                     min: 0
                     max: 50
AppBundle\Entity\ParameterDomains:
    properties:
        pmdSeqno:
               - NotBlank: ~
               - NotNull: ~
        code:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
        description:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 250
AppBundle\Entity\ParameterMethods:
    properties:
        description:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 100
        name:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 70
        origin:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
                - AppBundle\Validator\Constraints\LegalParameterMethodOrigin: ~
        unit:
                - Length:
                     min: 0
                     max: 10
        variabletype:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 20
AppBundle\Entity\Person2Requests:
    properties:
        psnSeqno:
               - NotBlank: ~
               - NotNull: ~
        rlnSeqno:
               - NotBlank: ~
               - NotNull: ~
        p2rType:
                - Length:
                     min: 0
                     max: 50
AppBundle\Entity\Persons:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity:
                fields: [lastName, firstName]
    properties:
        lastName:
                - NotNull: ~
                - Length:
                     min: 0
                     max: 30
        firstName:
                - NotNull: ~
                - Length:
                     min: 0
                     max: 30
        address:
                - Length:
                     min: 0
                     max: 250
        sex:
                - Length:
                     min: 0
                     max: 50
                - AppBundle\Validator\Constraints\LegalSex: ~
        title:
                - Length:
                     min: 0
                     max: 50
                - AppBundle\Validator\Constraints\LegalPersonTitle: ~
        email:
                - Length:
                     min: 0
                     max: 80
                - Email:
                     message: The email "{{ value }}" is not a valid email.
                     checkMX: false
        loginName:
                - Length:
                     min: 0
                     max: 25
        password:
                - Length:
                     min: 0
                     max: 60
        phoneNumber:
                - Length:
                     min: 0
                     max: 20
        pic:
                - Length:
                     min: 0
                     max: 100
        sessionid:
                - Length:
                     min: 0
                     max: 32
AppBundle\Entity\Places:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: name
    properties:
        name:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 100
        type:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 0
                     max: 50
                - AppBundle\Validator\Constraints\LegalPlaceType: ~
AppBundle\Entity\Platforms:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: name
    properties:
        name:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
        pfmType:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 0
                     max: 50
                - AppBundle\Validator\Constraints\LegalPfmType: ~
AppBundle\Entity\RequestLoans:
    properties:
        dateRequest:
                - NotBlank: ~
                - NotNull: ~
                - AppBundle\Validator\Constraints\DateRange:
                     min: "1900-01-01"
                     max: "now"
        status:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
                - AppBundle\Validator\Constraints\LegalRequestLoanStatus: ~
        studyDescription:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 250
AppBundle\Entity\Samples:
    properties:
        analyzeDest:
                - Length:
                     min: 1
                     max: 50
                - NotBlank: ~
                - NotNull: ~
        availability:
                - Length:
                     min: 0
                     max: 50
        conservationMode:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
        speType:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 50
        subref:
                - Length:
                     min: 0
                     max: 10
AppBundle\Entity\Spec2Events:
    getters:
        causeOfDeathLegal:
            - "True": { message: "You have reported Cause of Death values, but this specimen is actually alive (as gathered by either observation type, events during observation or decomposition code) at the moment you report. Please correct either." }
        causeOfDeathLegal2:
            - "True": { message: "You did not report Cause of Death values, but this specimen is actually dead (as gathered by either observation type, events during observation or decomposition code) at the moment you report. Please correct either." }
        lazarusLegal:
            - "True": { message: "The attached specimen was already reported dead (chronologically). Dead specimens can't be observed again, in whatever state." }
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity:
                fields: eseSeqno
                message: 'An event can have only one specimen tied to it.'
    properties:
        eseSeqno:
               - NotBlank: ~
               - NotNull: ~
        scnSeqno:
               - NotBlank: ~
               - NotNull: ~
               - Valid: ~
        circumstantialValues:
               - Valid: ~
        measurementValues:
               - Valid: ~
        pathologyValues:
               - Valid: ~
        causeOfDeathValues:
               - Valid: ~
        bycatchProbabilityValues:
               - Valid: ~
AppBundle\Entity\Specimens:
    getters:
        scnNumberLegal:
            - "True": { message: "It is not possible to provide any values (eg. sex, collection tag, rbins tag or any special values) for specimens that have been observed in group. Separate the group in several observations of one animal if you wish to provide these details. It is also impossible when editing the specimen itself and increasing the number beyond 1 (multiple specimens cannot have a sex or a necropsy label recorded, nor have specimen values)." }
        sexLegal:
            - "True": { message: "This value should not be null." }
#        txnSeqnoNewSpecimenLegal:
#            - "True": { message: "This value should be completed." }
#        sexNewSpecimenLegal:
#            - "True": { message: "This value should be completed." }
    properties:
        txnSeqno:
                - NotBlank: ~
                - NotNull: ~
        scnNumber:
                - NotBlank: { groups: [ObservationCreation,SpecimenUpdate] }
                - NotNull: { groups: [ObservationCreation,SpecimenUpdate] }
                - Type:
                     type: integer
                     message: The value {{ value }} is not a valid {{ type }}.
                - Range:
                     min: 0
                     max: 9999
        sex:
                - Length:
                     min: 0
                     max: 50
                - AppBundle\Validator\Constraints\LegalSex: ~
        name:
                - Length:
                     min: 0
                     max: 50
        otherTag:
                - Length:
                     min: 0
                     max: 40
        rbinsTag:
                - Length:
                     min: 0
                     max: 20
        necropsyTag:
                - Length:
                     min: 0
                     max: 14
                - AppBundle\Validator\Constraints\Necropsytag: ~
        identificationCertainty:
                - Type:
                     type: bool
                     message: The value {{ value }} is not a valid {{ type }}.
AppBundle\Entity\SpecimenValues:
    getters:
        valueFlagLegal:
                - "True": { message: "This value, as it is set, needs a validity flag as well." }
        valueLegal:
                - "True": { message: "This value must be completed."}
        valueUnwantedLegal:
                - "True": { message: "This value may not be provided for specimens that have been observed in group. Make separate observations if you wish to provide this value." }
#        valueUnwantedLegal2:
#                - "True": { message: "This value may not be provided for specimens that are alive." }
    properties:
        pmdSeqno:
                - NotBlank: ~
                - NotNull: ~
        valueAssignable:
                - NotBlank: ~
                - NotNull: ~
        description:
                - Length:
                     min: 0
                     max: 250
        value:
                - Length:
                     min: 1
                     max: 50
#        valueFlag:
#                - Length:
#                     min: 0
#                     max: 50
#                     #todo add That the values should correspond to the ones in cg_ref_codes
AppBundle\Entity\Stations:
    properties:
        pceSeqno:
                - NotBlank: ~
                - NotNull: ~
        areaType:
                - NotBlank: { groups: [StationCreation] }
                - NotNull: { groups: [StationCreation] }
                - Length:
                     min: 0
                     max: 50
                - AppBundle\Validator\Constraints\LegalAreaType: ~
        code:
                - NotBlank: { groups: [StationCreation] }
                - NotNull: { groups: [StationCreation] }
                - Length:
                     min: 0
                     max: 50
        description:
                - Length:
                     min: 0
                     max: 500
        latDec:
                - NotBlank: { groups: [StationCreation] }
                - NotNull: { groups: [StationCreation] }
                - AppBundle\Validator\Constraints\DecimalLongitude: { groups: [StationCreation] }
        lonDec:
                - NotBlank: { groups: [StationCreation] }
                - NotNull: { groups: [StationCreation] }
                - AppBundle\Validator\Constraints\DecimalLongitude: { groups: [StationCreation] }
AppBundle\Entity\Sources:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: name
    properties:
        name:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 1
                     max: 100
        type:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 0
                     max: 50
AppBundle\Entity\Taxa:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: idodId
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity:
            fields: [canonicalName, scientificNameAuthorship]
            errorPath: scientificNameAuthorship
            message: 'The formal scientific species name (name+author) already occurs in the database. Please change.'
    properties:
        idodId:
                - NotBlank: ~
                - NotNull: ~
                - Type:
                     type: integer
                     message: The value {{ value }} is not a valid {{ type }}.
                - Range:
                     min: 0
                     max: 999999
        canonicalName:
                - NotBlank: ~
                - NotNull: ~
                - Length:
                     min: 0
                     max: 50
        scientificNameAuthorship:
                - Length:
                     min: 0
                     max: 50
        taxonrank:
                - Length:
                     min: 0
                     max: 30
        vernacularNameEn:
                - Length:
                     min: 0
                     max: 50

