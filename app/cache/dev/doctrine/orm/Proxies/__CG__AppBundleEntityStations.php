<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Stations extends \AppBundle\Entity\Stations implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'areaType', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'code', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'creDat', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'creUser', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'latitude', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'latDeg', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'longitude', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'lonDeg', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'modDat', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'modUser', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'seqno', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'pceSeqno');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'areaType', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'code', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'creDat', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'creUser', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'latitude', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'latDeg', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'longitude', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'lonDeg', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'modDat', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'modUser', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'seqno', '' . "\0" . 'AppBundle\\Entity\\Stations' . "\0" . 'pceSeqno');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Stations $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setAreaType($areaType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAreaType', array($areaType));

        return parent::setAreaType($areaType);
    }

    /**
     * {@inheritDoc}
     */
    public function getAreaType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAreaType', array());

        return parent::getAreaType();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', array($code));

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', array());

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreDat($creDat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreDat', array($creDat));

        return parent::setCreDat($creDat);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreDat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreDat', array());

        return parent::getCreDat();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreUser($creUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreUser', array($creUser));

        return parent::setCreUser($creUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreUser', array());

        return parent::getCreUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', array($latitude));

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', array());

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatDeg($latDeg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatDeg', array($latDeg));

        return parent::setLatDeg($latDeg);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatDeg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatDeg', array());

        return parent::getLatDeg();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', array($longitude));

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', array());

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLonDeg($lonDeg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLonDeg', array($lonDeg));

        return parent::setLonDeg($lonDeg);
    }

    /**
     * {@inheritDoc}
     */
    public function getLonDeg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLonDeg', array());

        return parent::getLonDeg();
    }

    /**
     * {@inheritDoc}
     */
    public function setModDat($modDat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModDat', array($modDat));

        return parent::setModDat($modDat);
    }

    /**
     * {@inheritDoc}
     */
    public function getModDat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModDat', array());

        return parent::getModDat();
    }

    /**
     * {@inheritDoc}
     */
    public function setModUser($modUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModUser', array($modUser));

        return parent::setModUser($modUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getModUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModUser', array());

        return parent::getModUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getSeqno()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getSeqno();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeqno', array());

        return parent::getSeqno();
    }

    /**
     * {@inheritDoc}
     */
    public function setPceSeqno(\AppBundle\Entity\Places $pceSeqno = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPceSeqno', array($pceSeqno));

        return parent::setPceSeqno($pceSeqno);
    }

    /**
     * {@inheritDoc}
     */
    public function getPceSeqno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPceSeqno', array());

        return parent::getPceSeqno();
    }

    /**
     * {@inheritDoc}
     */
    public function getFullyQualifiedName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullyQualifiedName', array());

        return parent::getFullyQualifiedName();
    }

}
