<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Specimens extends \AppBundle\Entity\Specimens implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'creDat', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'creUser', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'modDat', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'modUser', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'mummtag', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'mummtagserie', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'necropsyTag', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'rbinsTag', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'scnNumber', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'sex', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'specieFlag', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'seqno', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'txnSeqno', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'spec2event');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'creDat', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'creUser', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'modDat', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'modUser', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'mummtag', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'mummtagserie', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'necropsyTag', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'rbinsTag', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'scnNumber', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'sex', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'specieFlag', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'seqno', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'txnSeqno', '' . "\0" . 'AppBundle\\Entity\\Specimens' . "\0" . 'spec2event');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Specimens $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setCreDat($creDat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreDat', array($creDat));

        return parent::setCreDat($creDat);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreDat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreDat', array());

        return parent::getCreDat();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreUser($creUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreUser', array($creUser));

        return parent::setCreUser($creUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreUser', array());

        return parent::getCreUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setModDat($modDat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModDat', array($modDat));

        return parent::setModDat($modDat);
    }

    /**
     * {@inheritDoc}
     */
    public function getModDat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModDat', array());

        return parent::getModDat();
    }

    /**
     * {@inheritDoc}
     */
    public function setModUser($modUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModUser', array($modUser));

        return parent::setModUser($modUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getModUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModUser', array());

        return parent::getModUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setMummtag($mummtag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMummtag', array($mummtag));

        return parent::setMummtag($mummtag);
    }

    /**
     * {@inheritDoc}
     */
    public function getMummtag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMummtag', array());

        return parent::getMummtag();
    }

    /**
     * {@inheritDoc}
     */
    public function setMummtagserie($mummtagserie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMummtagserie', array($mummtagserie));

        return parent::setMummtagserie($mummtagserie);
    }

    /**
     * {@inheritDoc}
     */
    public function getMummtagserie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMummtagserie', array());

        return parent::getMummtagserie();
    }

    /**
     * {@inheritDoc}
     */
    public function setNecropsyTag($necropsyTag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNecropsyTag', array($necropsyTag));

        return parent::setNecropsyTag($necropsyTag);
    }

    /**
     * {@inheritDoc}
     */
    public function getNecropsyTag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNecropsyTag', array());

        return parent::getNecropsyTag();
    }

    /**
     * {@inheritDoc}
     */
    public function setRbinsTag($rbinsTag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRbinsTag', array($rbinsTag));

        return parent::setRbinsTag($rbinsTag);
    }

    /**
     * {@inheritDoc}
     */
    public function getRbinsTag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRbinsTag', array());

        return parent::getRbinsTag();
    }

    /**
     * {@inheritDoc}
     */
    public function setScnNumber($scnNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScnNumber', array($scnNumber));

        return parent::setScnNumber($scnNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getScnNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScnNumber', array());

        return parent::getScnNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setSex($sex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSex', array($sex));

        return parent::setSex($sex);
    }

    /**
     * {@inheritDoc}
     */
    public function getSex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSex', array());

        return parent::getSex();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpecieFlag($specieFlag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpecieFlag', array($specieFlag));

        return parent::setSpecieFlag($specieFlag);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpecieFlag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpecieFlag', array());

        return parent::getSpecieFlag();
    }

    /**
     * {@inheritDoc}
     */
    public function getSeqno()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getSeqno();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeqno', array());

        return parent::getSeqno();
    }

    /**
     * {@inheritDoc}
     */
    public function setTxnSeqno(\AppBundle\Entity\Taxa $txnSeqno = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTxnSeqno', array($txnSeqno));

        return parent::setTxnSeqno($txnSeqno);
    }

    /**
     * {@inheritDoc}
     */
    public function getTxnSeqno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTxnSeqno', array());

        return parent::getTxnSeqno();
    }

    /**
     * {@inheritDoc}
     */
    public function getSpec2event()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpec2event', array());

        return parent::getSpec2event();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpec2event($spec2event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpec2event', array($spec2event));

        return parent::setSpec2event($spec2event);
    }

}
